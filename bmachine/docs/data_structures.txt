===============
DATA STRUCTURES
===============

channels - information about 'channels'.  Channels form the foundation of the site.  Files are organized into
channels, and each channel generates an RSS feed which is then used in DTV or another reader.

When the channels are loaded from their respective datastore, the unique key is the ID field.  The ID
is incremented to be the current largest channel ID + 1 when each new channel is created.

The elements are:

CSSURL: This is the CSS file which will be used when displaying this channel.  It defaults to
'default.css' but can be specified by the user.

Created: A Unix timestamp for when the channel was created.

Description: A publicly visible description of the channel.

Files: An array of data.  Each row has a filehash, and a timestamp.

ID: The unique id for the channel, this is a number that gets incremented with each new channel.

LibraryURL: The URL for this channel.  Normally this will be a link to library.php, but it is possible
for the user to build a custom channel page and link to that instead.

Name: The name of the channel.

OpenPublish: boolean flag, if set to 1, then anyone can publish to this channel, if not set, then only admin users can publish.

Options: This is a set of flags which controls what is displayed on the library page for this channel.  
If set to 1, then the element of the file is displayed, otherwise it isn't displayed.  The flags are:
	- Creator: show the creator of the file
	- Desc: show the description
	- Filesize: show the filesize.  For torrents, we show the size of the contents, not the actual .torrent file
	- Keywords: show any keywords for this file
	- Length: show the play length
	- Published: show the publish date
	- Thumbnail: if it has one, show a thumbnail
	- Title: show the title of the file
	- Torrent: for torrents, show the peer/leecher stats
	- URL: show the associated URL for a file, if it exists.


Publisher: Optional field where you can specify a publisher for the content that will be in this channel.

Sections:  A channel can have 'sections'.  The sections data is an array with the following elements:
	- Featured - An array with two elements:
		- Files: an array of filehashes for the files that are included in the section
		- Name: the name of the section

WebURL: Currently this field is unused.

====================

files - information about 'files' - each file represents a published item.  It can be a torrent, and uploaded file, or a URL.

Files are loaded into an array.  The key for each element in the array is the unique hash for the file.  Each file has the
following data:

- Created: [timestamp] A UNIX-style timestamp marking when the file was initally added to the datastore
- Creator: [string] The name of the creator of this file
- Desc: [string] A description of the file
- Excerpt: [flag] Set if this is an excerpt of a larger piece
- Explicit: [flag] Set if this is explicit content
- ID: [string] This is the filehash of the file, which is its key.
- Image: [url] A URL for a thumbnail for this file.
- Keywords: [array of strings] This is an array of keywords for this file
- LicenseName: [string] This is the optional name of the Creative Commons license for this file
- LicenseURL: [url] Optional URL for the Creative Commons license for this file
- Mimetype: [string] The MIME type of this file.  Example: "video/mpeg"
- People: [array] An array of people who are connected to this file.  The key for each element is an
incremented integer.  Each element is another array with two elements.  Element #0 is the name of the person
and element #1 is the role the person played with the file.
- Publishdate: [timestamp] This is the date that the file will become live on the site.  If set in the future, the 
file won't be displayed.
- Publisher: [string] The user who published this file.
- ReleaseDay/ReleaseMonth/ReleaseYear: [int] the release date of the file 
- Rights: [string] The copyright holder of the file
- RuntimeHours/RuntimeMinutes/RuntimeSeconds: [int] The runtime of the file
- SharingEnabled: [flag] If set, server-sharing is enabled for this file, if not set then it isn't.  This file will be
server-shared either way if it is globally set.  NOTE: This only applies to local torrents.
- Title: [string] The title of the file
- Transcript: [string] A URL to the transcript for this file.
- URL: [url] If this file was a posted URL, then this will be that URL
- Webpage: [url] Optional link to an associated webpage
- donation_id: [int] Optional link to a donation, if this is set, it will be added to any RSS that contains this file
- ignore_mime: [flag] If set, BM won't check the MIME type of a file.  This flag is set when the user is uploading
a file that doesn't appear to be audio or video, so that we don't constantly annoy them about the MIME.

====================

donations - Broaddcast Machine has the ability to store some donation-related text that will be included in its RSS feeds,
which will be displayed by DTV while a file is playing.  Donation data is stored as an array.  The key for each element is
a unique hash.  Each element in the donations array is another array with these fields:

	- Files: This is an array of file hashes.  The key is the filehash and the value for each element is always 1.  This is used to 
	track which files are using this donation, and so we can display a tally of how many files are using the donation.
	- email: If the user specifies an email address (which can be used to auto-generate a PayPal link), we store it here.
	- text: The text of the donation
	- title: An internal title for this donation

====================

users - Broadcast Machine has users.  They fall into two categories - admin users, who have full access to thie site,
and regular users, whose access can be restricted.

The key for each element in the array is the username.  Each element has an array with the following data:

	- Created: [time] timestamp for when the user was created
	- Email: [string] email address of the user.  If the user forgets their password, a link will be sent to this address to help them reset it
 	- Hash: [string] this is a hash of their password and a few other fields.  When a user logs in, the data they enter will be hashed and compared to this
	- IsAdmin [flag] true if this is an admin user
	- IsPending [flag] if adding new users requires admin approval, this flag will be set for new users until an admin approves them.
	- Name: [string] name of the user - same as their hash

====================

newusers

====================

settings

====================
